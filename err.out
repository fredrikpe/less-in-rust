   Compiling less2 v0.1.0 (/home/fredrik/git/fredrikpe/less2)
warning: unused import: `std::io::Read`
  --> src/main.rs:12:5
   |
12 | use std::io::Read;
   |     ^^^^^^^^^^^^^
   |
   = note: #[warn(unused_imports)] on by default

warning: unused import: `std::io::Seek`
  --> src/main.rs:13:5
   |
13 | use std::io::Seek;
   |     ^^^^^^^^^^^^^

warning: unused imports: `LineNumCache`, `LineNum`
 --> src/file_buffer.rs:7:22
  |
7 | use line_num_cache::{LineNum, LineNumCache};
  |                      ^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `termion::event::MouseButton`
 --> src/input.rs:3:5
  |
3 | use termion::event::MouseButton;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `termion::event::MouseEvent`
 --> src/input.rs:4:5
  |
4 | use termion::event::MouseEvent;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `termion::terminal_size`
 --> src/printer.rs:4:5
  |
4 | use termion::terminal_size;
  |     ^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `SeekFrom`, `Seek`
 --> src/util.rs:4:15
  |
4 | use std::io::{Seek, SeekFrom};
  |               ^^^^  ^^^^^^^^

warning: unused import: `unicode_segmentation::GraphemeIndices`
 --> src/string_util.rs:1:5
  |
1 | use unicode_segmentation::GraphemeIndices;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused variable: `e`
  --> src/main.rs:49:16
   |
49 |     if let Err(e) = run(file) {
   |                ^ help: consider using `_e` instead
   |
   = note: #[warn(unused_variables)] on by default

warning: unused variable: `input_event`
  --> src/main.rs:61:13
   |
61 |     let mut input_event = input::Input::NoOp;
   |             ^^^^^^^^^^^ help: consider using `_input_event` instead

warning: unused variable: `pos`
  --> src/file_buffer.rs:41:13
   |
41 |         let pos = self.seek_percent(percent)?;
   |             ^^^ help: consider using `_pos` instead

warning: unused variable: `pos`
  --> src/file_buffer.rs:46:13
   |
46 |         let pos = self.seek_percent(100)?;
   |             ^^^ help: consider using `_pos` instead

warning: unused variable: `size`
  --> src/file_buffer.rs:70:19
   |
70 |         let (buf, size) = self.make_buf_down()?;
   |                   ^^^^ help: consider using `_size` instead

warning: value assigned to `bytes_read` is never read
  --> src/file_buffer.rs:93:17
   |
93 |         let mut bytes_read: i64 = 0;
   |                 ^^^^^^^^^^
   |
   = note: #[warn(unused_assignments)] on by default

warning: unused variable: `new_pos`
   --> src/file_buffer.rs:114:13
    |
114 |         let new_pos = self.seek(SeekFrom::Current(-(size as i64)))?;
    |             ^^^^^^^ help: consider using `_new_pos` instead

warning: unused variable: `bytes_read`
   --> src/file_buffer.rs:116:13
    |
116 |         let bytes_read = self.read(&mut buf[..size])?;
    |             ^^^^^^^^^^ help: consider using `_bytes_read` instead

warning: unused variable: `e`
  --> src/printer.rs:30:17
   |
30 |             Err(e) => return Err(()),
   |                 ^ help: consider using `_e` instead

warning: unused variable: `reader`
  --> src/printer.rs:73:9
   |
73 |         reader: &mut BiBufReader<R>,
   |         ^^^^^^ help: consider using `_reader` instead

warning: variable does not need to be mutable
  --> src/main.rs:61:9
   |
61 |     let mut input_event = input::Input::NoOp;
   |         ----^^^^^^^^^^^
   |         |
   |         help: remove this `mut`
   |
   = note: #[warn(unused_mut)] on by default

warning: method is never used: `pcur_pos`
   --> src/file_buffer.rs:147:5
    |
147 |     fn pcur_pos(&mut self) -> Result<()> {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: #[warn(dead_code)] on by default

warning: struct is never constructed: `LineNumCache`
 --> src/line_num_cache.rs:7:1
  |
7 | pub struct LineNumCache {
  | ^^^^^^^^^^^^^^^^^^^^^^^

warning: method is never used: `new`
  --> src/line_num_cache.rs:12:5
   |
12 |     pub fn new() -> LineNumCache {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: method is never used: `add`
  --> src/line_num_cache.rs:18:5
   |
18 |     pub fn add(&mut self, line_num: LineNum) {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: method is never used: `prev`
  --> src/line_num_cache.rs:25:5
   |
25 |     pub fn prev(&mut self, offset: usize) -> Option<(LineNum, i64)> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: method is never used: `closest`
  --> src/line_num_cache.rs:40:5
   |
40 |     pub fn closest(&mut self, offset: usize) -> Option<(LineNum, i64)> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: method is never used: `add_important`
  --> src/line_num_cache.rs:56:5
   |
56 |     fn add_important(&mut self, line_num: LineNum) {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: method is never used: `try_add`
  --> src/line_num_cache.rs:60:5
   |
60 |     fn try_add(&mut self, line_num: LineNum) -> Result<(), ()> {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: method is never used: `print2`
  --> src/printer.rs:71:5
   |
71 | /     pub fn print2<R: Read + Seek>(
72 | |         &mut self,
73 | |         reader: &mut BiBufReader<R>,
74 | |     ) -> Result<(), ()> {
...  |
80 | |         Ok(())
81 | |     }
   | |_____^

warning: function is never used: `file_size`
  --> src/util.rs:21:1
   |
21 | pub fn file_size(file: File) -> Result<u64, std::io::Error> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function is never used: `nth_grapheme_offset`
 --> src/string_util.rs:4:1
  |
4 | pub fn nth_grapheme_offset(buf: &str, n: usize) -> Option<usize> {
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function is never used: `next_newline_offset`
  --> src/string_util.rs:14:1
   |
14 | pub fn next_newline_offset(buf: &str) -> Option<usize> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function is never used: `aprev_newline_offset`
  --> src/string_util.rs:21:1
   |
21 | pub fn aprev_newline_offset(buf: &str) -> Option<usize> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function is never used: `find_offset`
  --> src/string_util.rs:28:1
   |
28 | / pub fn find_offset<'a, P, I: Iterator<Item = (usize, &'a str)>>(
29 | |     grapheme_indices: I,
30 | |     mut predicate: P,
31 | | ) -> Option<usize>
...  |
41 | |     None
42 | | }
   | |_^

warning: function is never used: `first_newline_wrapped`
  --> src/string_util.rs:60:1
   |
60 | pub fn first_newline_wrapped(buf: &str, screen_width: usize) -> Option<usize> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function is never used: `last_newline_wrapped`
  --> src/string_util.rs:64:1
   |
64 | pub fn last_newline_wrapped(buf: &str, screen_width: usize) -> Option<usize> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function is never used: `last_newline_offset`
  --> src/string_util.rs:77:1
   |
77 | pub fn last_newline_offset(buf: &str) -> Option<usize> {
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function is never used: `snd_last_newline_wrapped`
   --> src/string_util.rs:109:1
    |
109 | pub fn snd_last_newline_wrapped(buf: &str, screen_width: usize) -> usize {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variant is never constructed: `JumpPercent`
  --> src/commands.rs:20:5
   |
20 |     JumpPercent(u64),
   |     ^^^^^^^^^^^^^^^^

warning: variant is never constructed: `Search`
  --> src/commands.rs:22:5
   |
22 |     Search(String),
   |     ^^^^^^^^^^^^^^

warning: variant is never constructed: `Search`
  --> src/commands.rs:31:5
   |
31 |     Search,
   |     ^^^^^^

warning: struct is never constructed: `NormalMode`
   --> src/commands.rs:100:1
    |
100 | pub struct NormalMode {
    | ^^^^^^^^^^^^^^^^^^^^^

warning: unused `std::result::Result` that must be used
  --> src/printer.rs:33:9
   |
33 |         write!(self.out, "{}", termion::cursor::Goto(1, 1));
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: #[warn(unused_must_use)] on by default
   = note: this `Result` may be an `Err` variant, which should be handled
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

warning: unused `std::result::Result` that must be used
  --> src/printer.rs:44:17
   |
44 |                 writeln!(self.out);
   |                 ^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

warning: unused `std::result::Result` that must be used
  --> src/printer.rs:45:17
   |
45 |                 write!(self.out, "\r");
   |                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

warning: unused `std::result::Result` that must be used
  --> src/printer.rs:51:17
   |
51 |                 writeln!(self.out);
   |                 ^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

warning: unused `std::result::Result` that must be used
  --> src/printer.rs:52:17
   |
52 |                 write!(self.out, "\r");
   |                 ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

warning: unused `std::result::Result` that must be used
  --> src/printer.rs:55:17
   |
55 |                 write!(self.out, "{}", grapheme);
   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

warning: unused `std::result::Result` that must be used
  --> src/printer.rs:66:9
   |
66 |         write!(self.out, "\n\r");
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

warning: unused `std::result::Result` that must be used
  --> src/printer.rs:67:9
   |
67 |         write!(self.out, ":");
   |         ^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

warning: unused `std::result::Result` that must be used
  --> src/printer.rs:68:9
   |
68 |         write!(self.out, "{}", termion::cursor::Goto(2, line_num + 1));
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

warning: unused `std::result::Result` that must be used
  --> src/printer.rs:76:9
   |
76 |         write!(self.out, "{}", termion::cursor::Goto(1, 1));
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

warning: unused `std::result::Result` that must be used
  --> src/printer.rs:85:9
   |
85 |         write!(self.out, "{}", termion::clear::All);
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: this `Result` may be an `Err` variant, which should be handled
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

    Finished dev [unoptimized + debuginfo] target(s) in 0.65s
     Running `target/debug/less2 --input_file src/main.rs`
nth 178
nth 0
nth 0
